#include <iostream>
#include "stdio.h"

using namespace std;


struct list {
	char el = NULL;
	list* next = NULL, * pred = NULL;
};

bool isSymmetric(list* t, int total) {
	int count = 0;
	list* frst, * sec;
	sec = frst = t;
	int mid = 0;
	if (total % 2 == 0)
		mid = total / 2;
	else
		mid = (total / 2) + 1;
	for (int i = 0; i < mid; i++) {
		sec = sec->pred;
		if (sec->el == frst->el) {
			count += 1;
		}
		frst = frst->next;
	}
	if (count == mid)
		return true;
	else
		return false;
}



int main()
{
	char h = '0';
	int total = 0;
	list* headlist, * end;
	end = headlist = new list;
	FILE* fp;
	fopen_s(&fp, "D:\input.txt", "r");
	if (fp == NULL)
		cout << "Error";
	else {
		fscanf_s(fp, "%c", &h, 1);
		while (h!='.') {
			end->next = new list;
			end->next->pred = end;
			end = end->next;
			end->el = h;
			total += 1;
			fscanf_s(fp, "%c", &h, 1);
		}
		end->next = headlist->next;
		headlist->next->pred = end;
	}
	fclose(fp);
	cout<< (isSymmetric(headlist->next, total) ? "Symmetric" : "Not symmetric");
}

//1.	В текстовом файле дана последовательность символов, оканчивающаяся точкой. 
//Написать подпрограмму, которая проверяет, симметричен ли относительно его середины двусвязанный кольцевой список. 
//Используя эту подпрограмму, проверить, симметрична ли относительно ее середины заданная последовательность символов.
