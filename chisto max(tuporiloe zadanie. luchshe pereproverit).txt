#include <iostream>
#include "stdio.h"

using namespace std;


struct list {
	float el = NULL;
	list* next = NULL;
};


int max(list* t, int* maximum) {
	if (t == NULL)
		return 0;
	if (*maximum < t->el) {
		*maximum = t->el;
	}
	return max(t->next, maximum);
}


list *del(list*& t, int *n) {
	int maximum = 0;
	max(t, &maximum);
	list* kon_spisok = t;
	t->el = maximum;
	t->next = NULL;
	*n = 1;
	return t;
}


void vivod(list* t, int total) {
	while (total != 0) {
		cout << t->el << ' ';
		t = t->next;
		total -= 1;
	}
}

int main()
{
	char h = '0';
	int total = 0;
	float a;
	list* headlist, * end;
	end = headlist = new list;
	FILE* fp;
	fopen_s(&fp, "D:\input.txt", "r");
	if (fp == NULL)
		cout << "Error";
	else {
		while (!feof(fp)) {
			fscanf_s(fp, "%f", &a);
			end->next = new list;
			end = end->next;
			end->el = a;
			total += 1;
			fscanf_s(fp, "%c", &h, 1);
		}
	}
	fclose(fp);
	del(headlist->next, &total);
	vivod(headlist->next, total);
}
//1.	В текстовом файле дана последовательность чисел. 
// Написать рекурсивную подпрограмму, которая находит максимальный элемент непустого однонаправленного списка. 
//Используя эту подпрограмму, удалить из заданной последовательности вся элементы со значениями меньше максимального. 